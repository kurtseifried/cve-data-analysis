#!/usr/bin/env python3

import os
import json
import csv
import sys

def extract_fields(input_dir, output_file):
    # List to hold CSV rows
    rows = []

    # Traverse all subdirectories and JSON files
    for root, _, files in os.walk(input_dir):
        for file in files:
            if file.endswith(".json"):
                file_path = os.path.join(root, file)
                with open(file_path, 'r') as f:
                    try:
                        data = json.load(f)
                        state = data.get("cveMetadata", {}).get("state", "N/A")
                        
                        # Only process CVEs with state "PUBLISHED"
                        if state != "PUBLISHED":
                            continue
                        
                        cve_id = data.get("cveMetadata", {}).get("cveId", "N/A")
                        assigner_short_name = data.get("cveMetadata", {}).get("assignerShortName", "N/A")
                        date_published = data.get("cveMetadata", {}).get("datePublished", "N/A")
                        
                        metrics = data.get("containers", {}).get("cna", {}).get("metrics", [{}])
                        base_score = "N/A"
                        
                        for metric in metrics:
                            if "cvssV3_1" in metric:
                                base_score = metric.get("cvssV3_1", {}).get("baseScore", "N/A")
                                break
                            elif "cvssV3_0" in metric:
                                base_score = metric.get("cvssV3_0", {}).get("baseScore", "N/A")
                                break
                            elif "cvssV2_0" in metric:
                                base_score = metric.get("cvssV2_0", {}).get("baseScore", "N/A")
                                break

                        # Append row to list
                        rows.append([cve_id, state, assigner_short_name, date_published, base_score])
                    except json.JSONDecodeError:
                        print(f"Error decoding JSON from file: {file_path}")

    # Write to CSV
    with open(output_file, 'w', newline='') as csvfile:
        csvwriter = csv.writer(csvfile)
        # Write header
        csvwriter.writerow(["cveId", "state", "assignerShortName", "datePublished", "baseScore"])
        # Write rows
        csvwriter.writerows(rows)

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python extract_csv.py <input_directory> <output_file>")
        sys.exit(1)

    input_dir = sys.argv[1]
    output_file = sys.argv[2]

    extract_fields(input_dir, output_file)

    
